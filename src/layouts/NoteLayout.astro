---
import BaseLayout from './BaseLayout.astro';
import Sidebar from '../components/Sidebar.astro';
const { title, sidebarItems = [], sectionName = 'math', sectionTitle = 'Math Notes' } = Astro.props;
---

<BaseLayout title={title}>
  <nav class="breadcrumbs">
    <a href={`/${sectionName}`}>{sectionTitle}</a>
    <span class="divider">/</span>
    <span aria-current="page">{title}</span>
  </nav>
  <div class="notes-container">
    <Sidebar items={sidebarItems} />
    <div class="notes-content">
      <slot />
    </div>
  </div>
  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      // Build sidebar links from second-level sections in notes
      const sections = document.querySelectorAll('.notes-content section.level2[id]');
      const sidebarList = document.querySelector('.sidebar ul');
      sidebarList.innerHTML = Array.from(sections).map(section => {
        const header = section.querySelector('h2, h1');
        const text = header ? header.textContent : '';
        return `<li><a href="#${section.id}">${text}</a></li>`;
      }).join('');
      // Highlight active section in sidebar on scroll
      const links = document.querySelectorAll('.sidebar a');
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          const id = entry.target.id;
          if (entry.isIntersecting) {
            links.forEach((link) => {
              if (link.getAttribute('href') === `#${id}`) {
                link.classList.add('active');
              } else {
                link.classList.remove('active');
              }
            });
          }
        });
      }, { rootMargin: '-50% 0px -50% 0px' });
      sections.forEach(section => observer.observe(section));
    });
  </script>
</BaseLayout>
